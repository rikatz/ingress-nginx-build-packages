## File originally copied from https://github.com/wolfi-dev/os/blob/main/grpc.yaml
## Changes based on https://gitlab.alpinelinux.org/alpine/aports/-/blob/master/community/grpc/APKBUILD
## Changes based on https://gitlab.alpinelinux.org/alpine/aports/-/blob/master/testing/opentelemetry-cpp/APKBUILD
package:
  name: ingress-nginx-opentelemetry
  version: 1.11.0
  epoch: 1
  description: Ingress NGINX - Opentelemetry dependencies
  copyright:
    - license: Apache-2.0
environment:
  contents:
    repositories:
      - 'https://dl-cdn.alpinelinux.org/alpine/v3.19/main'
      - 'https://dl-cdn.alpinelinux.org/alpine/v3.19/community'
    packages:
      - abseil-cpp-dev
      - alpine-sdk
      - autoconf
      - automake
      - c-ares-dev
      - ca-certificates-bundle
      - chrpath
      - cmake
      - curl-dev
      - libstdc++-dev
      - libtool
      - linux-headers
      - nlohmann-json
      - openssl-dev
      - protobuf-dev
      - re2
      - re2-dev
      - samurai
      - xxhash-dev
      - yaml-dev
      - zlib-dev

vars:
  grpc-version: "1.62.0"
  grpc-commit: f78a54c5ad4e058734aa9b2beb9459940e4de342
  opentelemetry-cpp-commit: "11d5d9e0d8fd8ba876c8994714cc2647479b6574"
  opentelemetry-proto: "1.1.0"
  opentelemetry-proto-commit: "4ca4f0335c63cda7ab31ea7ed70d6553aee14dce"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/grpc/grpc
      tag: v${{vars.grpc-version}}
      expected-commit: ${{vars.grpc-commit}}
      destination: grpc
  - uses: git-checkout
    with:
      repository: https://github.com/open-telemetry/opentelemetry-cpp
      tag: v${{package.version}}
      expected-commit: ${{vars.opentelemetry-cpp-commit}}
  - uses: git-checkout
    with:
      repository: https://github.com/open-telemetry/opentelemetry-proto
      tag: v${{vars.opentelemetry-proto}}
      destination: opentelemetry-proto
      expected-commit: ${{vars.opentelemetry-proto-commit}}

  ## Build GRPC
  - runs: |
      cd grpc
      mkdir -p "${{targets.destdir}}"/usr/share/doc/grpc
      cmake -B _build -G Ninja \
      	-DCMAKE_BUILD_TYPE=None \
      	-DCMAKE_INSTALL_PREFIX=/usr \
      	-DCMAKE_CXX_STANDARD=17 \
      	-DBUILD_SHARED_LIBS=True \
      	-DgRPC_INSTALL=ON \
      	-DgRPC_CARES_PROVIDER=package \
      	-DgRPC_SSL_PROVIDER=package \
      	-DgRPC_ZLIB_PROVIDER=package \
        -DgRPC_PROTOBUF_PROVIDER=package \
      	-DgRPC_ABSL_PROVIDER=package \
        -DgRPC_RE2_PROVIDER=package \
      	-DgRPC_BENCHMARK_PROVIDER=package \
      	-DgRPC_BACKWARDS_COMPATIBILITY_MODE=OFF \
      	-DgRPC_BUILD_TESTS=OFF
      cmake --build _build
  
  ## Install gRPC
  ## TODO: Maybe we don't need it anymore on binary, so we probably want to
  ## install it on a different directory, consume and done
  ## We install twice, one for the next build, the other to be part of the package
  ## Too stupid? maybe
  - runs: |
      cd grpc
      DESTDIR="${{targets.destdir}}" cmake --install _build
      cmake --install _build

  ## Build Opentelemetry-CPP
  - runs: |
      export CXXFLAGS="$CXXFLAGS -DBENCHMARK_HAS_NO_INLINE_ASSEMBLY"
      cmake -B build -G Ninja -Wno-dev \
        -DOTELCPP_PROTO_PATH="opentelemetry-proto/" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DBUILD_SHARED_LIBS=ON \
        -DBUILD_TESTING="$(want_check && echo ON || echo OFF)" \
        -DBUILD_W3CTRACECONTEXT_TEST="$(want_check && echo ON || echo OFF)" \
        -DCMAKE_BUILD_TYPE=None \
        -DWITH_ABSEIL=ON \
        -DWITH_STL=ON \
        -DWITH_EXAMPLES=OFF \
        -DWITH_ZPAGES=OFF \
        -DWITH_OTLP_GRPC=ON \
        -DWITH_OTLP_HTTP=ON \
        -DWITH_ZIPKIN=ON \
        -DWITH_PROMETHEUS=OFF \
        -DWITH_LOGS_PREVIEW=OFF \
        -DWITH_ASYNC_EXPORT_PREVIEW=OFF \
        -DWITH_METRICS_EXEMPLAR_PREVIEW=OFF
      cmake --build build
  ## Install Opentelemetry-CPP
  - runs: |
      DESTDIR="${{targets.destdir}}" cmake --install build

subpackages:
  - name: ingress-nginx-opentelemetry-dev
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - ingress-nginx-opentelemetry
    description: ingress nginx libraries for otel

update:
  enabled: true
  github:
    identifier: kubernetes/ingress-nginx-modules
    strip-prefix: v
    use-tag: true